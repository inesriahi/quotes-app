{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/SingleQuote.js"],"names":["module","exports","NewCommentForm","props","useHttp","addComment","status","error","sendRequest","commentTextRef","useRef","onAddComment","useEffect","submitFormHandler","event","preventDefault","commentData","text","current","value","quoteId","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","getAllComments","loadedComments","data","useParams","length","console","log","onAddCommentHandler","useCallback","onClick","HighlightedQuote","quote","author","SingleQuote","getSingleQuote","match","useRouteMatch","path","exact","to","url"],"mappings":"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","file":"static/js/4.db876295.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3iNJv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2RijL\",\"loading\":\"NewCommentForm_loading__3LBQi\",\"control\":\"NewCommentForm_control__GNmP7\",\"actions\":\"NewCommentForm_actions__2e-vr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__134dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__UuXeG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3qbf5\"};","import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const { status, error, sendRequest } = useHttp(addComment);\n  const commentTextRef = useRef();\n\n  const {onAddComment} = props;\n  useEffect(() => {\n    if (status === 'completed' && !error)\n      onAddComment()\n  }, [status, error, onAddComment])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    sendRequest({\n      commentData: {text:commentTextRef.current.value},\n      quoteId: props.quoteId,\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst Comments = (props) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const {\n    status,\n    error,\n    data: loadedComments,\n    sendRequest,\n  } = useHttp(getAllComments, true);\n\n  const { quoteId } = useParams();\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId, isAddingComment]);\n\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  } else if (status === 'completed' && loadedComments && loadedComments.length > 0){\n    comments = <CommentsList comments={loadedComments} />\n  } else if (error) {\n    comments =  (\n      <div className=\"centered focused\">\n        <p>Error Loading Comments!</p>\n      </div>\n    );\n  } else if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = (\n      <div className=\"centered\">\n        <p>No comments yet!</p>\n      </div>\n    );\n  }\n  console.log(loadedComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const onAddCommentHandler = useCallback(() => {\n    setIsAddingComment(false);\n  }, [])\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      \n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddComment={onAddCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from \"react\";\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\nexport default function SingleQuote(props) {\r\n  const { status, data: quote, error, sendRequest } = useHttp(getSingleQuote, true);\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n  const id = params.quoteId;\r\n\r\n  useEffect(() => {\r\n    sendRequest(id);\r\n  }, [sendRequest, id]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  } else if (error) {\r\n    return (\r\n      <div className=\"centered focused\">\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  } else if (!quote.text) {\r\n    return <p>No Quote Found!</p>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HighlightedQuote author={quote.author} text={quote.text} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments quoteId = {id} />\r\n      </Route>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}